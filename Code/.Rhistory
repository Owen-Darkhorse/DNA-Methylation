sparsePcaCombo(X.T, 3, 10, cancerTypes)
debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(X.T, 3, 10, cancerTypes)
varExpl
sparsePcaCombo <- function(X, budget, Kmax, cancerTypes) {
library(PMA)
PCA <- SPC(X, sumabsv = budget, K = Kmax, trace = FALSE, compute.pve = TRUE)
## Compute Scree Plot
varExpl <- PCA$prop.var.explained
# # PCs that explain > 1% of variances
# minPC <- which.max(varExpl > 0.01)
# percPCmin <- varExpl[minPC]
scree <- data.frame(
"k" = 1:length(varExpl),
"perc" = varExpl
)
# limitPC <- which.min(-diff(percPCmin, 1) < 0.03)
A <- ggplot(scree) +
geom_line(aes(x = k, y = perc,
color = adjustcolor("red", alpha = 0.4)),
stat = "identity")+
# geom_hline(linetype = "dashed", yintercept = percPCmin) +
# geom_vline(linetype = "dashed", xintercept = minPC) +
xlab("# of PCs") +
ylab("Proportion of variance explained")+
ggtitle("Scree Plot") +
theme(legend.position = "none")
## Compute PC1 vs PC 2 Scatter Plot
Vall <- PCA$v
V3 <- Vall[,1:3]
Z3 <- X %*% V3
Z3 <- data.frame(Z3)
colnames(V3) <- c("PC1", "PC2", "PC3")
colnames(Z3) <- c("PC1", "PC2", "PC3")
Z3$Types <- cancerTypes
B <- ggplot(Z3) +
geom_point(aes(x = PC1, y = PC2, color = Types, alpha = 0.3))+
ggtitle("PC 1,2 Scatter Plot")+
scale_color_brewer(palette = "Paired")
## PC 1 and PC 2 Trace Plot
# V3 <- data.frame(PCA$rotation[,1:3])
# colnames(V3) <- c("PC1", "PC2")
# V3$k <- 1:dim(V3)[1]
C <- ggplot(V3) +
geom_bar(aes(x = k, y = PC1), color = adjustcolor("red", alpha = 0.4),  stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 1") +
theme(legend.position = "none")+
ggtitle("PC 1 Trace Plot")
D <- ggplot(V3) +
geom_bar(aes(x = k, y = PC2), color = adjustcolor("blue", alpha = 0.4), stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 2") +
theme(legend.position = "none") +
ggtitle("PC 2 Trace Plot")
cowplot::plot_grid(plotlist = list(A,B,C,D),
nrow = 2, ncol = 2,
labels = c("A", "B", "C", "D")) %>%
print()
score3D(V3, 'Sparse PCA Score Scatter Plot by Cancer Types', "cancerTypes")
return(Vall)
}
V.sparse.before <- sparsePcaCombo(X.T, 3, 10, cancerTypes)
traceback()
debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 3, 10, cancerTypes)
V.sparse.log <- sparsePcaCombo(t(logX.T), 3, 10, cancerTypes)
V.sparse.ivt <- sparsePcaCombo(t(ivtX.T), 3, 10, cancerTypes)
sparsePcaCombo <- function(X, budget, Kmax, cancerTypes) {
library(PMA)
PCA <- SPC(X, sumabsv = budget, K = Kmax, trace = FALSE, compute.pve = TRUE)
## Compute Scree Plot
varExpl <- PCA$prop.var.explained
# # PCs that explain > 1% of variances
# minPC <- which.max(varExpl > 0.01)
# percPCmin <- varExpl[minPC]
scree <- data.frame(
"k" = 1:Kmax,
"perc" = varExpl
)
# limitPC <- which.min(-diff(percPCmin, 1) < 0.03)
A <- ggplot(scree) +
geom_line(aes(x = k, y = perc,
color = adjustcolor("red", alpha = 0.4)),
stat = "identity")+
# geom_hline(linetype = "dashed", yintercept = percPCmin) +
# geom_vline(linetype = "dashed", xintercept = minPC) +
xlab("# of PCs") +
ylab("Proportion of variance explained")+
ggtitle("Scree Plot") +
theme(legend.position = "none")
## Compute PC1 vs PC 2 Scatter Plot
Vall <- PCA$v
V3 <- Vall[,1:3]
V3$k <- 1:nrow(V3)
Z3 <- X %*% V3
Z3 <- data.frame(Z3)
colnames(V3) <- c("PC1", "PC2", "PC3")
colnames(Z3) <- c("PC1", "PC2", "PC3")
Z3$Types <- cancerTypes
B <- ggplot(Z3) +
geom_point(aes(x = , y = PC2, color = Types, alpha = 0.3))+
ggtitle("PC 1,2 Scatter Plot")+
scale_color_brewer(palette = "Paired")
## PC 1 and PC 2 Trace Plot
# V3 <- data.frame(PCA$rotation[,1:3])
# colnames(V3) <- c("PC1", "PC2")
# V3$k <- 1:dim(V3)[1]
C <- ggplot(V3) +
geom_bar(aes(x = k, y = PC1), color = adjustcolor("red", alpha = 0.4),  stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 1") +
theme(legend.position = "none")+
ggtitle("PC 1 Trace Plot")
D <- ggplot(V3) +
geom_bar(aes(x = k, y = PC2), color = adjustcolor("blue", alpha = 0.4), stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 2") +
theme(legend.position = "none") +
ggtitle("PC 2 Trace Plot")
cowplot::plot_grid(plotlist = list(A,B,C,D),
nrow = 2, ncol = 2,
labels = c("A", "B", "C", "D")) %>%
print()
score3D(V3, 'Sparse PCA Score Scatter Plot by Cancer Types', "cancerTypes")
return(Vall)
}
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
sparsePcaCombo <- function(X, budget, Kmax, cancerTypes) {
library(PMA)
PCA <- SPC(X, sumabsv = budget, K = Kmax, trace = FALSE, compute.pve = TRUE)
## Compute Scree Plot
varExpl <- PCA$prop.var.explained
# # PCs that explain > 1% of variances
# minPC <- which.max(varExpl > 0.01)
# percPCmin <- varExpl[minPC]
scree <- data.frame(
"k" = 1:Kmax,
"perc" = varExpl
)
# limitPC <- which.min(-diff(percPCmin, 1) < 0.03)
A <- ggplot(scree) +
geom_line(aes(x = k, y = perc,
color = adjustcolor("red", alpha = 0.4)),
stat = "identity")+
# geom_hline(linetype = "dashed", yintercept = percPCmin) +
# geom_vline(linetype = "dashed", xintercept = minPC) +
xlab("# of PCs") +
ylab("Proportion of variance explained")+
ggtitle("Scree Plot") +
theme(legend.position = "none")
## Compute PC1 vs PC 2 Scatter Plot
Vall <- PCA$v
V3 <- Vall[,1:3]
Z3 <- X %*% V3
Z3 <- data.frame(Z3)
colnames(V3) <- c("PC1", "PC2", "PC3")
colnames(Z3) <- c("PC1", "PC2", "PC3")
Z3$Types <- cancerTypes
B <- ggplot(Z3) +
geom_point(aes(x = , y = PC2, color = Types, alpha = 0.3))+
ggtitle("PC 1,2 Scatter Plot")+
scale_color_brewer(palette = "Paired")
## PC 1 and PC 2 Trace Plot
# V3 <- data.frame(PCA$rotation[,1:3])
# colnames(V3) <- c("PC1", "PC2")
# V3$k <- 1:dim(V3)[1]
V3$k <- 1:nrow(V3)
C <- ggplot(V3) +
geom_bar(aes(x = k, y = PC1), color = adjustcolor("red", alpha = 0.4),  stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 1") +
theme(legend.position = "none")+
ggtitle("PC 1 Trace Plot")
D <- ggplot(V3) +
geom_bar(aes(x = k, y = PC2), color = adjustcolor("blue", alpha = 0.4), stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 2") +
theme(legend.position = "none") +
ggtitle("PC 2 Trace Plot")
cowplot::plot_grid(plotlist = list(A,B,C,D),
nrow = 2, ncol = 2,
labels = c("A", "B", "C", "D")) %>%
print()
score3D(V3, 'Sparse PCA Score Scatter Plot by Cancer Types', "cancerTypes")
return(Vall)
}
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
last_trace()
rlang::last_trace()
sparsePcaCombo <- function(X, budget, Kmax, cancerTypes) {
library(PMA)
PCA <- SPC(X, sumabsv = budget, K = Kmax, trace = FALSE, compute.pve = TRUE)
## Compute Scree Plot
varExpl <- PCA$prop.var.explained
# # PCs that explain > 1% of variances
# minPC <- which.max(varExpl > 0.01)
# percPCmin <- varExpl[minPC]
scree <- data.frame(
"k" = 1:Kmax,
"perc" = varExpl
)
# limitPC <- which.min(-diff(percPCmin, 1) < 0.03)
A <- ggplot(scree) +
geom_line(aes(x = k, y = perc,
color = adjustcolor("red", alpha = 0.4)),
stat = "identity")+
# geom_hline(linetype = "dashed", yintercept = percPCmin) +
# geom_vline(linetype = "dashed", xintercept = minPC) +
xlab("# of PCs") +
ylab("Proportion of variance explained")+
ggtitle("Scree Plot") +
theme(legend.position = "none")
## Compute PC1 vs PC 2 Scatter Plot
Vall <- PCA$v
V3 <- Vall[,1:3]
Z3 <- X %*% V3
Z3 <- data.frame(Z3)
colnames(V3) <- c("PC1", "PC2", "PC3")
colnames(Z3) <- c("PC1", "PC2", "PC3")
Z3$Types <- cancerTypes
B <- ggplot(Z3) +
geom_point(aes(x = , y = PC2, color = Types, alpha = 0.3))+
ggtitle("PC 1,2 Scatter Plot")+
scale_color_brewer(palette = "Paired")
## PC 1 and PC 2 Trace Plot
V3 <- data.frame(PCA$rotation[,1:3])
V3$k <- 1:dim(V3)[1]
C <- ggplot(V3) +
geom_bar(aes(x = k, y = PC1), color = adjustcolor("red", alpha = 0.4),  stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 1") +
theme(legend.position = "none")+
ggtitle("PC 1 bar plot")
D <- ggplot(V3) +
geom_bar(aes(x = k, y = PC2), color = adjustcolor("blue", alpha = 0.4), stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 2") +
theme(legend.position = "none") +
ggtitle("PC 2 bar plot")
cowplot::plot_grid(plotlist = list(A,B,C,D),
nrow = 2, ncol = 2,
labels = c("A", "B", "C", "D"))+
ggtitle(paste("K = ", Kmax, "L1 norm =", budget)) %>%
print()
score3D(V3, 'Sparse PCA Score Scatter Plot by Cancer Types', "cancerTypes")
return(Vall)
}
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
sparsePcaCombo <- function(X, budget, Kmax, cancerTypes) {
library(PMA)
PCA <- SPC(X, sumabsv = budget, K = Kmax, trace = FALSE, compute.pve = TRUE)
## Compute Scree Plot
varExpl <- PCA$prop.var.explained
# # PCs that explain > 1% of variances
# minPC <- which.max(varExpl > 0.01)
# percPCmin <- varExpl[minPC]
scree <- data.frame(
"k" = 1:Kmax,
"perc" = varExpl
)
# limitPC <- which.min(-diff(percPCmin, 1) < 0.03)
A <- ggplot(scree) +
geom_line(aes(x = k, y = perc,
color = adjustcolor("red", alpha = 0.4)),
stat = "identity")+
# geom_hline(linetype = "dashed", yintercept = percPCmin) +
# geom_vline(linetype = "dashed", xintercept = minPC) +
xlab("# of PCs") +
ylab("Proportion of variance explained")+
ggtitle("Scree Plot") +
theme(legend.position = "none")
## Compute PC1 vs PC 2 Scatter Plot
Vall <- PCA$v
V3 <- Vall[,1:3]
Z3 <- X %*% V3
Z3 <- data.frame(Z3)
colnames(V3) <- c("PC1", "PC2", "PC3")
colnames(Z3) <- c("PC1", "PC2", "PC3")
Z3$Types <- cancerTypes
B <- ggplot(Z3) +
geom_point(aes(x = , y = PC2, color = Types, alpha = 0.3))+
ggtitle("PC 1,2 Scatter Plot")+
scale_color_brewer(palette = "Paired")
## PC 1 and PC 2 Trace Plot
V3$k <- 1:dim(V3)[1]
C <- ggplot(V3) +
geom_bar(aes(x = k, y = PC1), color = adjustcolor("red", alpha = 0.4),  stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 1") +
theme(legend.position = "none")+
ggtitle("PC 1 bar plot")
D <- ggplot(V3) +
geom_bar(aes(x = k, y = PC2), color = adjustcolor("blue", alpha = 0.4), stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 2") +
theme(legend.position = "none") +
ggtitle("PC 2 bar plot")
cowplot::plot_grid(plotlist = list(A,B,C,D),
nrow = 2, ncol = 2,
labels = c("A", "B", "C", "D"))+
ggtitle(paste("K = ", Kmax, "L1 norm =", budget)) %>%
print()
score3D(V3, 'Sparse PCA Score Scatter Plot by Cancer Types', "cancerTypes")
return(Vall)
}
debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
sparsePcaCombo <- function(X, budget, Kmax, cancerTypes) {
library(PMA)
PCA <- SPC(X, sumabsv = budget, K = Kmax, trace = FALSE, compute.pve = TRUE)
## Compute Scree Plot
varExpl <- PCA$prop.var.explained
# # PCs that explain > 1% of variances
# minPC <- which.max(varExpl > 0.01)
# percPCmin <- varExpl[minPC]
scree <- data.frame(
"k" = 1:Kmax,
"perc" = varExpl
)
# limitPC <- which.min(-diff(percPCmin, 1) < 0.03)
A <- ggplot(scree) +
geom_line(aes(x = k, y = perc,
color = adjustcolor("red", alpha = 0.4)),
stat = "identity")+
# geom_hline(linetype = "dashed", yintercept = percPCmin) +
# geom_vline(linetype = "dashed", xintercept = minPC) +
xlab("# of PCs") +
ylab("Proportion of variance explained")+
ggtitle("Scree Plot") +
theme(legend.position = "none")
## Compute PC1 vs PC 2 Scatter Plot
Vall <- PCA$v
V3 <- Vall[,1:3]
Z3 <- X %*% V3
Z3 <- data.frame(Z3)
colnames(V3) <- c("PC1", "PC2", "PC3")
colnames(Z3) <- c("PC1", "PC2", "PC3")
Z3$Types <- cancerTypes
B <- ggplot(Z3) +
geom_point(aes(x = , y = PC2, color = Types, alpha = 0.3))+
ggtitle("PC 1,2 Scatter Plot")+
scale_color_brewer(palette = "Paired")
## PC 1 and PC 2 Trace Plot
V3$k <- 1:dim(V3)[1]
V3 <- data.frame(V3)
C <- ggplot(V3) +
geom_bar(aes(x = k, y = PC1), color = adjustcolor("red", alpha = 0.4),  stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 1") +
theme(legend.position = "none")+
ggtitle("PC 1 bar plot")
D <- ggplot(V3) +
geom_bar(aes(x = k, y = PC2), color = adjustcolor("blue", alpha = 0.4), stat = "identity")+
geom_hline(linetype = "dashed", yintercept = 0.05) +
geom_hline(linetype = "dashed", yintercept = -0.05) +
xlab("Genes") +
ylab("PC 2") +
theme(legend.position = "none") +
ggtitle("PC 2 bar plot")
cowplot::plot_grid(plotlist = list(A,B,C,D),
nrow = 2, ncol = 2,
labels = c("A", "B", "C", "D"))+
ggtitle(paste("K = ", Kmax, "L1 norm =", budget)) %>%
print()
score3D(V3, 'Sparse PCA Score Scatter Plot by Cancer Types', "cancerTypes")
return(Vall)
}
debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
GRCh37 human reference genome using the
Burrows-Wheeler Aligner (BWA-MEM v0.7.08).
dim(V3)
debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
Q
source("pcaCombo.R")
debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
source("pcaCombo.R")
# debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
source("pcaCombo.R")
# debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
V.sparse.log <- sparsePcaCombo(t(logX.T), 10, 10, cancerTypes)
V.sparse.ivt <- sparsePcaCombo(t(ivtX.T), 10, 10, cancerTypes)
source("pcaCombo.R")
# debug(sparsePcaCombo)
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
V.sparse.log <- sparsePcaCombo(t(logX.T), 10, 10, cancerTypes)
V.sparse.ivt <- sparsePcaCombo(t(ivtX.T), 10, 10, cancerTypes)
df <- data.frame(
"PC1" = rnorm(378),
"PC2" = rnorm(378),
"PC3" = rnorm(378)
)
score3D(df, title = 'Score Scatter Plot of ', colorFactor = NA)
library(plotly)
plot_ly()
score3D
source("pcaCombo.R")
setwd("C:/Users/86139/Desktop/PARA Note System/Projects/Summer 2025 Collaboration with Elena/Code")
source("pcaCombo.R")
df <- data.frame(
"PC1" = rnorm(378),
"PC2" = rnorm(378),
"PC3" = rnorm(378)
)
score3D(df, title = 'Score Scatter Plot of ', colorFactor = NA)
score3D(df, title = 'Score Scatter Plot of ', colorFactor = cancerTypes)
score3D <- function(df, title = 'Score Scatter Plot of ', colorFactor = NA) {
library(plotly)
if (is.na(colorFactor)) {
fig <- plot_ly(df, x = ~PC1, y = ~PC2, z = ~PC3,
size = 10)
} else {
fig <- plot_ly(df, x = ~PC1, y = ~PC2, z = ~PC3,
color = ~eval(sym(colorFactor)), size = 10)
}
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'PC 1'),
yaxis = list(title = 'PC 2'),
zaxis = list(title = 'PC 3')),
title = title,
legend = list(title=list(text='<b> Categories </b>')))
fig
}
score3D(df, title = 'Score Scatter Plot of ', colorFactor = cancerTypes)
is.na(NA)
as.logical(NA)
df <- data.frame(
"PC1" = rnorm(378),
"PC2" = rnorm(378),
"PC3" = rnorm(378)
)
score3D(df, title = 'Score Scatter Plot of ', colorFactor = cancerTypes)
score3D(df, title = 'Score Scatter Plot of ', colorFactor = NA)
V.sparse.ivt <- sparsePcaCombo(t(ivtX.T), 10, 10, cancerTypes)
View(V.sparse.ivt)
Z.sparse.ivt <- ivtX.T %*% V.sparse.ivt
View(V.sparse.ivt)
Z.sparse.ivt <- t(t(V.sparse.ivt) %*% ivtX.T)
score3D(df, title = 'Score Scatter Plot of ', colorFactor = NA)
colnames <- paste0("PC", 1:10)
View(Z.sparse.ivt)
colnames(Z.sparse.ivt) <- paste0("PC", 1:10)
score3D(Z.sparse.ivt, title = 'Score Scatter Plot of ', colorFactor = NA)
Z.sparse.ivt$Types <- cancerTypes
Z.sparse.ivt <- t(t(V.sparse.ivt) %*% ivtX.T)
colnames(Z.sparse.ivt) <- paste0("PC", 1:10)
cancerTypes
Z.sparse.ivt <- data.frame(Z.sparse.ivt)
Z.sparse.ivt$Types <- cancerTypes
score3D(Z.sparse.ivt, title = 'Score Scatter Plot of ', colorFactor = cancerTypes)
score3D(Z.sparse.ivt, title = 'Score Scatter Plot of ', colorFactor = "Types")
score3D(Z.sparse.ivt, title = 'Sparse PCA, K = 10, L1 norm <= 10', colorFactor = "Types")
score3D(Z.sparse.ivt, title = 'Sparse PCA, IVT K = 10, L1 norm <= 10', colorFactor = "Types")
V.sparse.before <- sparsePcaCombo(t(X.T), 10, 10, cancerTypes)
V.sparse.log <- sparsePcaCombo(t(logX.T), 10, 10, cancerTypes)
makeScore3D <- function(df, PCM) {
## df: p*n matrix, rows are features, columns are observations
## PCM: PC matrix with the top 3 PCs
score <- t(t(PCM) %*% df)
score <- cbind(score,
"Healthy" = ifelse(cancerTypes == "Normal", "Healthy", "Cancer"))
score <- cbind(score, "Types"= cancerTypes)
score <- data.frame(score)
}
makeScore3D <- function(df, PCM) {
## df: p*n matrix, rows are features, columns are observations
## PCM: PC matrix with the top 3 PCs
score <- t(t(PCM) %*% df)
colnames(score) <- paste0("PC", 1:ncol(score))
score <- cbind(score,
"Healthy" = ifelse(cancerTypes == "Normal", "Healthy", "Cancer"))
score <- cbind(score, "Types"= cancerTypes)
score <- data.frame(score)
score
}
score_sparse_raw <- makeScore3D(X.T, PC_raw)
score_sparse_raw <- makeScore3D(X.T, V.sparse.before[,1:3])
score_sparse_log <- makeScore3D(logX.T, V.sparse.log[,1:3])
score_sparse_ivt <- makeScore3D(ivtX.T, V.sparse.ivt[,1:3])
score3D(score_sparse_raw, title = 'Sparse PCA, Before, K = 10, L1 norm <= 10', colorFactor = "Types")
score3D(score_sparse_log, title = 'Sparse PCA, Log, IVT K = 10, L1 norm <= 10', colorFactor = "Types")
score3D(score_sparse_ivt, title = 'Sparse PCA, IVT, K = 10, L1 norm <= 10', colorFactor = "Types")
write.csv(V.sparse.before, "Top10PCNoTrans.csv")
write.csv(V.sparse.before, "Top10PCLog.csv")
write.csv(V.sparse.before, "Top10PCIVT.csv")
